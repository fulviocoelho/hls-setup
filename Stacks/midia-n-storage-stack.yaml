version: "3.9"

services:
  db:
    image: mariadb:10.6
    container_name: nextcloud-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      MYSQL_ROOT_PASSWORD: senha_root
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: senha_segura
    volumes:
      - /storage/pods_data/nextcloud/mysql:/var/lib/mysql
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  app:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.5"
    ports:
      - 8080:80
    depends_on:
      - db
    environment:
      MYSQL_HOST: <Your Ip of Choise>
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: senha_segura
    volumes:
      - /storage/pods_data/nextcloud/html:/var/www/html
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "3"
    ports:
      - "8096:8096" # Porta Web
    volumes:
      - /storage/pods_data/jellyfin/config:/config
      - /storage/jelly_media/media:/media # Conteúdo de mídia compartilhado
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # Para uso de transcodificação com aceleração de Hardware Intel Quick Sync
    environment:
      - TZ=America/Sao_Paulo
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  ftp:
    image: delfer/alpine-ftp-server
    container_name: ftp-server
    restart: unless-stopped
    ports:
      - "21:21"     # Porta FTP padrão
      - "21000-21010:21000-21010" # Portas para modo passivo
    environment:
      - USERS=admin|admin123|/media
      # - ADDRESS=0.0.0.0 # substitua pelo IP local
      - PASV_MIN_PORT=21000
      - PASV_MAX_PORT=21010
      - TZ=America/Sao_Paulo
    volumes:
      - /storage/jelly_media/media:/media/jellyfin # Mesma pasta do Jellyfin
      - /storage/ownfoil_games/games:/media/ownfoil # Mesma pasta do Ownfoil
      - /storage/navidrome_media/media:/media/navidrome # Mesma pasta do Navidrome
      - /storage/pods_data/booklore_media:/media/booklore # Mesma pasta do booklore
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  navidrome:
    image: deluan/navidrome:latest
    user: 1000:1000 # should be owner of volumes
    ports:
      - "4533:4533"
    restart: unless-stopped
    environment:
      ND_PORT: 80
      # Optional: put your config options customization here. Examples:
      # ND_LOGLEVEL: debug
    volumes:
      - /storage/pods_data/navidrome/data:/data
      - /storage/navidrome_media/media:/music:ro # Conteúdo de mídia compartilhado
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=80
      - TORRENTING_PORT=6881
    volumes:
      - /storage/pods_data/qbittorrent/config:/config
      - /storage/jelly_media/media:/downloads/jellyfin #optional
      - /storage/navidrome_media/media:/downloads/navidrome #optional
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional
  
  ownfoil:
    container_name: ownfoil
    image: a1ex4/ownfoil
    environment:
     # For write permission in config directory
     - PUID=1000
     - PGID=1000
     # to create/update an admin user at startup
     - USER_ADMIN_NAME=admin
     - USER_ADMIN_PASSWORD=asdvnf!546
     # to create/update a regular user at startup
     - USER_GUEST_NAME=guest
     - USER_GUEST_PASSWORD=oerze!@8981
    volumes:
      - /storage/ownfoil_games/games:/games
      - /storage/pods_data/ownfoil/config:/app/config
    ports:
      - "8465:8465"
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  booklore:
    # Official Docker Hub image:
    image: booklore/booklore:latest
    # Or the GHCR image:
    # image: ghcr.io/booklore-app/booklore:latest
    container_name: booklore
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DATABASE_URL=jdbc:mariadb://<Your Ip of Choise For MariaDb>:3306/booklore   # Only modify this if you're familiar with JDBC and your database setup
      - DATABASE_USERNAME=booklore                          # Must match MYSQL_USER defined in the mariadb container
      - DATABASE_PASSWORD=your_secure_password              # Use a strong password; must match MYSQL_PASSWORD defined in the mariadb container 
      - BOOKLORE_PORT=80                                  # Port BookLore listens on inside the container; must match container port below
      - SWAGGER_ENABLED=false                               # Enable or disable Swagger UI (API docs). Set to 'true' to allow access; 'false' to block access (recommended for production).
    depends_on:
      booklore_mariadb:
        condition: service_healthy
    ports:
      - "80:80" # HostPort:ContainerPort → Keep both numbers the same, and also ensure the container port matches BOOKLORE_PORT, no exceptions. 
                    # All three (host port, container port, BOOKLORE_PORT) must be identical for BookLore to function properly.
                    # Example: To expose on host port 8080, set BOOKLORE_PORT=8080 and use "8080:8080". 
    volumes:
      - /storage/pods_data/booklore/data:/app/data       # Application data (settings, metadata, cache, etc.). Persist this folder to retain your library state across container restarts.
      - /storage/pods_data/booklore_media/books:/books         # Primary book library folder. Mount your collection here so BookLore can access and organize your books.
      - /storage/pods_data/booklore_media/bookdrop:/bookdrop   # BookDrop folder. Files placed here are automatically detected and prepared for import.
    restart: unless-stopped
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

  booklore_mariadb:
    image: lscr.io/linuxserver/mariadb:11.4.5
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - MYSQL_ROOT_PASSWORD=super_secure_password  # Use a strong password for the database's root user, should be different from MYSQL_PASSWORD
      - MYSQL_DATABASE=booklore
      - MYSQL_USER=booklore                        # Must match DATABASE_USERNAME defined in the booklore container
      - MYSQL_PASSWORD=your_secure_password        # Use a strong password; must match DATABASE_PASSWORD defined in the booklore container
    volumes:
      - /storage/pods_data/booklore/mariadb/config:/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      local_network:
        ipv4_address: <Your Ip of Choise> #Optional

networks:
  local_network:
    external: true
    name: local_net_macvlan